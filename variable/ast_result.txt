*ast.File {
.  Package: 1
.  Name: *ast.Ident {
.  .  NamePos: 9
.  .  Name: "gopher"
.  }
.  Decls: []ast.Decl (len = 4) {
.  .  0: *ast.GenDecl {
.  .  .  TokPos: 17
.  .  .  Tok: import
.  .  .  Lparen: 24
.  .  .  Specs: []ast.Spec (len = 1) {
.  .  .  .  0: *ast.ImportSpec {
.  .  .  .  .  Path: *ast.BasicLit {
.  .  .  .  .  .  ValuePos: 27
.  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  Value: "\"errors\""
.  .  .  .  .  }
.  .  .  .  .  EndPos: 0
.  .  .  .  }
.  .  .  }
.  .  .  Rparen: 36
.  .  }
.  .  1: *ast.FuncDecl {
.  .  .  Name: *ast.Ident {
.  .  .  .  NamePos: 44
.  .  .  .  Name: "main"
.  .  .  .  Obj: *ast.Object {
.  .  .  .  .  Kind: func
.  .  .  .  .  Name: "main"
.  .  .  .  .  Decl: *(obj @ 23)
.  .  .  .  }
.  .  .  }
.  .  .  Type: *ast.FuncType {
.  .  .  .  Func: 39
.  .  .  .  Params: *ast.FieldList {
.  .  .  .  .  Opening: 48
.  .  .  .  .  Closing: 49
.  .  .  .  }
.  .  .  }
.  .  .  Body: *ast.BlockStmt {
.  .  .  .  Lbrace: 51
.  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  0: *ast.IfStmt {
.  .  .  .  .  .  If: 54
.  .  .  .  .  .  Init: *ast.AssignStmt {
.  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
.  .  .  .  .  .  .  .  0: *ast.Ident {
.  .  .  .  .  .  .  .  .  NamePos: 57
.  .  .  .  .  .  .  .  .  Name: "_"
.  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  Name: "_"
.  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 45)
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  1: *ast.Ident {
.  .  .  .  .  .  .  .  .  NamePos: 60
.  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 45)
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  }
.  .  .  .  .  .  .  TokPos: 64
.  .  .  .  .  .  .  Tok: :=
.  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  0: *ast.CallExpr {
.  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  NamePos: 67
.  .  .  .  .  .  .  .  .  .  Name: "Translate"
.  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  Kind: func
.  .  .  .  .  .  .  .  .  .  .  Name: "Translate"
.  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
.  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 249
.  .  .  .  .  .  .  .  .  .  .  .  .  Name: "Translate"
.  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 73)
.  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
.  .  .  .  .  .  .  .  .  .  .  .  .  Func: 244
.  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: 258
.  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 259
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "greeting"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "greeting"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 87)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.InterfaceType {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Interface: 268
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Methods: *ast.FieldList {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: 277
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: 278
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Incomplete: false
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: 279
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: 281
.  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 2) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 282
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Field {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 290
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "error"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: 295
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 297
.  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 4) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.AssignStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lhs: []ast.Expr (len = 2) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 300
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 133)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 303
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ok"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ok"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 133)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  TokPos: 306
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tok: :=
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rhs: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.TypeAssertExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 309
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "greeting"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 92)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 318
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 319
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "string"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 325
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.IfStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  If: 328
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Cond: *ast.UnaryExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 331
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: !
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 332
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "ok"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 147)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 335
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 339
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 346
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 350
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "errors"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 357
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "New"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 360
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 361
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"unsupported type error\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: 0
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 385
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 388
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  2: *ast.SwitchStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Switch: 392
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Tag: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 399
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "v"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 138)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 401
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.CaseClause {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Case: 404
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 409
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"こんにちは\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Colon: 426
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Body: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 430
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 437
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"hello\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 446
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "nil"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 451
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  3: *ast.ReturnStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 455
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 2) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 462
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  1: *ast.CallExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 466
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "errors"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 473
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "New"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 476
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 477
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"unsupported string error!\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: 0
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 504
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 506
.  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  Lparen: 76
.  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  ValuePos: 77
.  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  Value: "\"こんにちは\""
.  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  Ellipsis: 0
.  .  .  .  .  .  .  .  .  Rparen: 94
.  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  }
.  .  .  .  .  .  }
.  .  .  .  .  .  Cond: *ast.BinaryExpr {
.  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  NamePos: 97
.  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  Obj: *(obj @ 59)
.  .  .  .  .  .  .  }
.  .  .  .  .  .  .  OpPos: 101
.  .  .  .  .  .  .  Op: !=
.  .  .  .  .  .  .  Y: *ast.Ident {
.  .  .  .  .  .  .  .  NamePos: 104
.  .  .  .  .  .  .  .  Name: "nil"
.  .  .  .  .  .  .  }
.  .  .  .  .  .  }
.  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  Lbrace: 108
.  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  0: *ast.IfStmt {
.  .  .  .  .  .  .  .  .  If: 112
.  .  .  .  .  .  .  .  .  Cond: *ast.CallExpr {
.  .  .  .  .  .  .  .  .  .  Fun: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  NamePos: 115
.  .  .  .  .  .  .  .  .  .  .  Name: "IsTypeError"
.  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  .  Kind: func
.  .  .  .  .  .  .  .  .  .  .  .  Name: "IsTypeError"
.  .  .  .  .  .  .  .  .  .  .  .  Decl: *ast.FuncDecl {
.  .  .  .  .  .  .  .  .  .  .  .  .  Name: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 159
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "IsTypeError"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 336)
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.FuncType {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Func: 154
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Params: *ast.FieldList {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: 170
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Names: []*ast.Ident (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 171
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *ast.Object {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: var
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Decl: *(obj @ 350)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 175
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "error"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: 180
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: *ast.FieldList {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Opening: 0
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []*ast.Field (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.Field {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Type: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 182
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "bool"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Closing: 0
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Lbrace: 187
.  .  .  .  .  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Return: 190
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Results: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BinaryExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 197
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 355)
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  OpPos: 201
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Op: ==
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Y: *ast.CallExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Fun: *ast.SelectorExpr {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  X: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 204
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "errors"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Sel: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  NamePos: 211
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Name: "New"
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Lparen: 214
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  0: *ast.BasicLit {
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  ValuePos: 215
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Kind: STRING
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Value: "\"unsupported type error\""
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Ellipsis: 0
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  Rparen: 239
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  .  .  Rbrace: 241
.  .  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  Lparen: 126
.  .  .  .  .  .  .  .  .  .  Args: []ast.Expr (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  0: *ast.Ident {
.  .  .  .  .  .  .  .  .  .  .  .  NamePos: 127
.  .  .  .  .  .  .  .  .  .  .  .  Name: "err"
.  .  .  .  .  .  .  .  .  .  .  .  Obj: *(obj @ 59)
.  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  Ellipsis: 0
.  .  .  .  .  .  .  .  .  .  Rparen: 130
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  Body: *ast.BlockStmt {
.  .  .  .  .  .  .  .  .  .  Lbrace: 132
.  .  .  .  .  .  .  .  .  .  List: []ast.Stmt (len = 1) {
.  .  .  .  .  .  .  .  .  .  .  0: *ast.ReturnStmt {
.  .  .  .  .  .  .  .  .  .  .  .  Return: 137
.  .  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  .  .  Rbrace: 146
.  .  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  .  }
.  .  .  .  .  .  .  }
.  .  .  .  .  .  .  Rbrace: 149
.  .  .  .  .  .  }
.  .  .  .  .  }
.  .  .  .  }
.  .  .  .  Rbrace: 151
.  .  .  }
.  .  }
.  .  2: *(obj @ 339)
.  .  3: *(obj @ 76)
.  }
.  Scope: *ast.Scope {
.  .  Objects: map[string]*ast.Object (len = 3) {
.  .  .  "Translate": *(obj @ 73)
.  .  .  "main": *(obj @ 27)
.  .  .  "IsTypeError": *(obj @ 336)
.  .  }
.  }
.  Imports: []*ast.ImportSpec (len = 1) {
.  .  0: *(obj @ 12)
.  }
.  Unresolved: []*ast.Ident (len = 10) {
.  .  0: *(obj @ 322)
.  .  1: *(obj @ 362)
.  .  2: *(obj @ 374)
.  .  3: *(obj @ 399)
.  .  4: *(obj @ 115)
.  .  5: *(obj @ 121)
.  .  6: *(obj @ 164)
.  .  7: *(obj @ 196)
.  .  8: *(obj @ 251)
.  .  9: *(obj @ 273)
.  }
}
